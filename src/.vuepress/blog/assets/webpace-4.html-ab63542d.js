import{_ as n,V as s,W as a,Z as e,X as t,a0 as o}from"./framework-fd1dac66.js";const p={},i=t("p",null,"从零开始配置 Webpack； 在实际项目开发中，零配置是不存在的。",-1),l=o(`<p>新建一个webpa文件夹， 初始化改文件夹</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>目的是生成 <code>package.json</code> 文件.</p><p>安装最新版本或特定版本的webpack</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install --save-dev webpack
npm install --save-dev webpack@&amp;lt;version&amp;gl;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装webpack-cli; 这里要全局安装，否者会出一个非法命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm i -g webpack-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>--save-dev</code> 是指在package.json里面生成安装的webpack等插件的版本信息 好了顺利的话已经可以使用了.</p><p>在<code>webp</code>文件夹内新建<code>src/index.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;hello webpack4!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令行输入：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>webpack <span class="token operator">--</span>mode<span class="token operator">=</span>development
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>成功后显示，打开 dist 文件夹会看到 main.js (默认输出到 dist)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Hash: f1dff803bf82cb639132
Version: webpack 4.17.1
Time: 135ms
Built at: 2018-08-29 20:42:46
  Asset     Size  Chunks             Chunk Names
main.js  3.8 KiB    main  [emitted]  main
Entrypoint main = main.js
[./src/index.js] 34 bytes {main} [built]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>--mode 模式 (必选，不然会有 WARNING)，是 webpack4 新增的参数选项，默认是 production</p></blockquote><ul><li>--mode production 生产环境</li></ul><blockquote><ul><li>提供 uglifyjs-webpack-plugin 代码压缩</li></ul></blockquote><ul><li><p>不需要定义 new webpack.DefinePlugin({ &quot;p<wbr>rocess.env.NODE_ENV&quot;: JSON.stringify(&quot;production&quot;) }) 默认 production</p></li><li><p>默认开启 NoEmitOnErrorsPlugin -&gt; optimization.noEmitOnErrors, 编译出错时跳过输出，以确保输出资源不包含错误</p></li><li><p>默认开启 ModuleConcatenationPlugin -&gt; optimization.concatenateModules, webpack3 添加的作用域提升(Scope Hoisting)</p></li><li><p>--mode development 开发环境</p></li></ul><blockquote><ul><li>使用 eval 构建 module, 提升增量构建速度</li></ul></blockquote><ul><li>不需要定义 new webpack.DefinePlugin({ &quot;p<wbr>rocess.env.NODE_ENV&quot;: JSON.stringify(&quot;development&quot;) }) 默认 development</li><li>默认开启 NamedModulesPlugin -&gt; optimization.namedModules 使用模块热替换(HMR)时会显示模块的相对路径</li></ul><p>接下来创建 dist/index.html 并引入 main.js, 浏览器中打开看内容。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>webpack<span class="token operator">-</span>simple<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span> src<span class="token operator">=</span><span class="token string">&quot;./main.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再创建一个文件 src/content.js, 在 src/index.js 中引入该模块</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// content.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token string">&#39;Looooooooooooooong content!&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello webpack4!</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./content.js&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再次执行 webpack --mode=development 完了打开 index.html</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// 内容
Hello webpack4!Looooooooooooooong content!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,27);function c(r,d){return s(),a("div",null,[i,e(" more "),l])}const v=n(p,[["render",c],["__file","webpace-4.html.vue"]]);export{v as default};
