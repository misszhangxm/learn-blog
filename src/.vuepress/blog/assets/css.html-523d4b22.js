import{_ as t,F as i,V as c,W as o,X as s,Y as n,$ as l,a0 as a}from"./framework-fd1dac66.js";const p={},d=a(`<h1 id="gird" tabindex="-1"><a class="header-anchor" href="#gird" aria-hidden="true">#</a> gird</h1><p>gird 布局是将容器划分为“行”和“列”，产生单元格，可以看作 <strong>二维布局</strong></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">item</span><span class="token punctuation">{</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="容器属性" tabindex="-1"><a class="header-anchor" href="#容器属性" aria-hidden="true">#</a> 容器属性</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code> <span class="token selector">指定一个容器采用grid布局
div</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>行和列</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
 <span class="token property">gird-template-colmuns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 100px<span class="token punctuation">)</span>
   
   <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>接受两个参数，第一个参数是重复的次数（上例是3），第二个参数是所要重复的值。

	 <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>重复某种模式也是可以的。
   例如： <span class="token property">gird-template-colmuns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>3<span class="token punctuation">,</span> 100px 200px 100px<span class="token punctuation">)</span>
   会生成9列，
   
   
   有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用auto-fill关键字表示自动填充。
   <span class="token property">gird-template-colmuns</span><span class="token punctuation">:</span> <span class="token function">repeat</span><span class="token punctuation">(</span>auto-fill<span class="token punctuation">,</span> 100px<span class="token punctuation">)</span>
   
   
   <span class="token function">minmax</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。
   <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 1fr 1fr <span class="token function">minmax</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">minmax</span><span class="token punctuation">(</span>100px<span class="token punctuation">,</span> 1fr<span class="token punctuation">)</span>表示列宽不小于100px，不大于1fr。
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>网格线的名称</strong></p><p><code>grid-template-columns</code>属性和<code>grid-template-rows</code>属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p><blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-columns</span><span class="token punctuation">:</span> [c1] 100px [c2] 100px [c3] auto [c4]<span class="token punctuation">;</span>
  <span class="token property">grid-template-rows</span><span class="token punctuation">:</span> [r1] 100px [r2] 100px [r3] auto [r4]<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>上面代码指定网格布局为3行 x 3列，因此有4根垂直网格线和4根水平网格线。方括号里面依次是这八根线的名字。</p><p>网格布局允许同一根线有多个名字，比如<code>[fifth-line row-5]</code>。</p><h3 id="行-列间距" tabindex="-1"><a class="header-anchor" href="#行-列间距" aria-hidden="true">#</a> 行/列间距</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>div{
 row-gap: 15px;    设置行间距
 column-gap: 15px; 设置列间距
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="grid-template-areas-属性" tabindex="-1"><a class="header-anchor" href="#grid-template-areas-属性" aria-hidden="true">#</a> grid-template-areas 属性</h3><p>网格布局允许指定&quot;区域&quot;（area），一个区域由单个或多个单元格组成。<code>grid-template-areas</code>属性用于定义区域。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
	<span class="token property">grid-template-areas</span><span class="token punctuation">:</span> <span class="token string">&#39;a b c&#39;</span>
                       <span class="token string">&#39;d e f&#39;</span>
                       <span class="token string">&#39;g h i&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当容器使用 <code>grid-template-areas</code>属性的时候，其<strong>子元素要有对应</strong>的 <code>grid-area: a</code>属性。否则不起作用</p><h3 id="grid-auto-flow-属性" tabindex="-1"><a class="header-anchor" href="#grid-auto-flow-属性" aria-hidden="true">#</a> grid-auto-flow 属性</h3><blockquote><p>划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。</p></blockquote><blockquote><p>默认的放置顺序是&quot;先行后列&quot;，即先填满第一行，再开始放入第二行。</p></blockquote><p>这个顺序由<code>grid-auto-flow</code>属性决定，</p><ul><li><p>默认值是<code>row</code>，即&quot;先行后列&quot;。</p></li><li><p>也可以将它设成<code>column</code>，变成&quot;先列后行&quot;。</p></li></ul><h3 id="对齐方式" tabindex="-1"><a class="header-anchor" href="#对齐方式" aria-hidden="true">#</a> 对齐方式</h3><p>justify-items 属性</p><p><code>justify-items</code>属性设置单元格内容的水平位置（左中右）</p><p>align-items 属性</p><p><code>align-items</code>属性设置单元格内容的垂直位置（上中下）</p><p><strong>这两个属性的写法完全相同</strong>，都可以取下面这些值。</p><ul><li>start：对齐单元格的起始边缘。</li><li>end：对齐单元格的结束边缘。</li><li>center：单元格内部居中。</li><li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li></ul><p>place-items 属性</p><p><code>place-items</code>属性是<code>align-items</code>属性和<code>justify-items</code>属性的合并简写形式。</p><p>​ place-items: column row</p><p>​ 第一个值是上下对齐方式， 第二个是左右对齐方式</p><p><strong>justify-content</strong> 属性， <strong>align-content</strong> 属性， <strong>place-content</strong> 属性</p><p><code>justify-content</code>属性是整个内容区域在容器里面的水平位置（左中右）。</p><p><code>align-content</code>属性是整个内容区域的垂直位置（上中下）。</p><p><code>place-content: &lt;align-content&gt; &lt;justify-content&gt;</code> 前两个的合并写法。</p><p>取值范围</p><ul><li>start 对齐容器的起始边框。</li><li>end 对齐容器的结束边框。</li><li>center 容器内部居中。</li><li>stretch 项目大小没有指定时，拉伸占据整个网格容器。</li><li>space-around 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。</li><li>space-between 项目与项目的间隔相等，项目与容器边框之间没有间隔。</li><li>space-evenly 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。</li></ul><h3 id="grid-auto-columns-属性-grid-auto-rows-属性" tabindex="-1"><a class="header-anchor" href="#grid-auto-columns-属性-grid-auto-rows-属性" aria-hidden="true">#</a> grid-auto-columns 属性， grid-auto-rows 属性</h3><p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。</p><p><code>grid-auto-columns</code>属性和<code>grid-auto-rows</code>属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与<code>grid-template-columns</code>和<code>grid-template-rows</code>完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p><h3 id="grid-template-属性-grid-属性" tabindex="-1"><a class="header-anchor" href="#grid-template-属性-grid-属性" aria-hidden="true">#</a> grid-template 属性， grid 属性</h3><p><code>grid-template</code>属性是<code>grid-template-columns</code>、<code>grid-template-rows</code>和<code>grid-template-areas</code>这三个属性的合并简写形式。</p><p><code>grid</code>属性是<code>grid-template-rows</code>、<code>grid-template-columns</code>、<code>grid-template-areas</code>、 <code>grid-auto-rows</code>、<code>grid-auto-columns</code>、<code>grid-auto-flow</code>这六个属性的合并简写形式。</p><h2 id="项目属性" tabindex="-1"><a class="header-anchor" href="#项目属性" aria-hidden="true">#</a> 项目属性</h2><p>grid-column-start 属性， grid-column-end 属性</p><ul><li><strong>简写为</strong> grid-column: 2/ 4;</li></ul><p>grid-row-start 属性， grid-row-end 属性</p><ul><li><strong>简写为</strong> grid-row: 2 /3;</li></ul><p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p><blockquote><ul><li><code>grid-column-start</code>属性：左边框所在的垂直网格线</li><li><code>grid-column-end</code>属性：右边框所在的垂直网格线</li><li><code>grid-row-start</code>属性：上边框所在的水平网格线</li><li><code>grid-row-end</code>属性：下边框所在的水平网格线</li></ul></blockquote><h3 id="grid-area属性" tabindex="-1"><a class="header-anchor" href="#grid-area属性" aria-hidden="true">#</a> <code>grid-area</code>属性</h3><p><code>grid-area</code>属性指定项目放在哪一个区域。</p><p>配合 grid-template-areas 属性使用</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
	<span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
  <span class="token property">grid-template-areas</span><span class="token punctuation">:</span> <span class="token string">&#39;a b c&#39;</span>
    									 <span class="token string">&#39;d e f&#39;</span>
    									 <span class="token string">&#39;g h i&#39;</span><span class="token punctuation">;</span>  分为9个区域
<span class="token punctuation">}</span>

<span class="token selector">.item-1</span> <span class="token punctuation">{</span>
  <span class="token property">grid-area</span><span class="token punctuation">:</span> e<span class="token punctuation">;</span>     该元素放到 e 区域
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>grid-area</code>属性还可用作<code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code>的合并简写形式，直接指定项目的位置。</p><blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">grid-area</span><span class="token punctuation">:</span> &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote>`,59),r={href:"https://jsbin.com/duyafez/edit?css,output",target:"_blank",rel:"noopener noreferrer"},u=a(`<blockquote><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item-1</span> <span class="token punctuation">{</span>
  <span class="token property">grid-area</span><span class="token punctuation">:</span> 1 / 1 / 3 / 3<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="设置单元格内容对齐方式" tabindex="-1"><a class="header-anchor" href="#设置单元格内容对齐方式" aria-hidden="true">#</a> 设置单元格内容对齐方式</h3><p>justify-self 属性， align-self 属性</p><ul><li>start：对齐单元格的起始边缘。</li><li>end：对齐单元格的结束边缘。</li><li>center：单元格内部居中。</li><li>stretch：拉伸，占满单元格的整个宽度（默认值）。</li></ul><p>place-self 属性是 <code>justify-self</code> ， <code>align-self</code> <strong>合并写法</strong></p>`,5);function m(v,g){const e=i("ExternalLinkIcon");return c(),o("div",null,[d,s("p",null,[n("下面是一个"),s("a",r,[n("例子"),l(e)]),n("。")]),u])}const b=t(p,[["render",m],["__file","css.html.vue"]]);export{b as default};
