import{_ as n,V as s,W as a,a0 as t}from"./framework-fd1dac66.js";const p={},o=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">global</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    	container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token keyword">function</span> <span class="token function">jsonp</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>options <span class="token operator">||</span> <span class="token operator">!</span>options<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    	<span class="token keyword">var</span> scriptNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    		data <span class="token operator">=</span> options<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
			url <span class="token operator">=</span> options<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
			callback <span class="token operator">=</span> options<span class="token punctuation">.</span>callback<span class="token punctuation">,</span>
			fnName <span class="token operator">=</span> <span class="token string">&quot;jsonp&quot;</span> <span class="token operator">+</span> id<span class="token operator">++</span><span class="token punctuation">;</span>
        
			<span class="token comment">// 添加回调函数</span>
			data<span class="token punctuation">[</span><span class="token string">&quot;callback&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> fnName<span class="token punctuation">;</span>
        
			<span class="token comment">// 拼接url</span>
			<span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            	params<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>
            <span class="token punctuation">}</span>
            url <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            url <span class="token operator">+=</span> params<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            scriptNode<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span>
                
            <span class="token comment">// 传递的是⼀个匿名的回调函数，要执⾏的话，暴露为⼀个全局⽅法</span>
            global<span class="token punctuation">[</span>fnName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ret</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
                container<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>scriptNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">delete</span> global<span class="token punctuation">[</span>fnName<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
                
            <span class="token comment">// 出错处理</span>
            scriptNode<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">error</span><span class="token operator">:</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                container<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>scriptNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
                global<span class="token punctuation">[</span>fnName<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">delete</span> global<span class="token punctuation">[</span>fnName<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
	
            scriptNode<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&quot;text/javascript&quot;</span><span class="token punctuation">;</span>
            container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>scriptNode<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        
        global<span class="token punctuation">.</span>jsonp <span class="token operator">=</span> jsonp<span class="token punctuation">;</span>
        
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","手写jsonp.html.vue"]]);export{r as default};
