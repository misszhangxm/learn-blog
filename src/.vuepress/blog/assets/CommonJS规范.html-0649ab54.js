import{_ as r,F as t,V as i,W as d,$ as o,a1 as p,Z as m,Y as n,X as e,a0 as l}from"./framework-fd1dac66.js";const c={},u=e("h1",{id:"定义模块",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#定义模块","aria-hidden":"true"},"#"),n(" 定义模块")],-1),h=l(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var x = 5;
var addX = function (value) {
  return value + x;
};
module.exports.x = x;
module.exports.addX = addX;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="加载模块" tabindex="-1"><a class="header-anchor" href="#加载模块" aria-hidden="true">#</a> 加载模块</h1><p>require方法用于加载模块，后缀名默认为.js</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>var app = require(&#39;./app.js&#39;);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>** 模块加载的顺序，按照其在代码中出现的顺序 ** 根据参数的不同格式，require命令去不同路径寻找模块文件。</p><ol><li>如果参数字符串以“/”开头，则表示加载的是一个位于绝对路径的模块文件。</li><li>如果参数字符串以“./”开头，则表示加载的是一个位于相对路径的模块文件</li><li>如果参数字符串不以“./“或”/“开头，则表示加载的是一个默认提供的核心模块（node核心模块，或者通过全局安装或局部安装在node_modules目录中的模块）</li></ol><h1 id="入口文件" tabindex="-1"><a class="header-anchor" href="#入口文件" aria-hidden="true">#</a> 入口文件</h1><p>一般都会有一个主文件（入口文件），在index.html中加载这个入口文件，然后在这个入口文件中加载其他文件。 ** 可以通过在package.json中配置main字段来指定入口文件。 **</p><h1 id="模块缓存" tabindex="-1"><a class="header-anchor" href="#模块缓存" aria-hidden="true">#</a> 模块缓存</h1><p>第一次加载某个模块时，Node会缓存该模块。以后再加载该模块，就直接从缓存取出该模块的module.exports属性。</p><h1 id="加载机制" tabindex="-1"><a class="header-anchor" href="#加载机制" aria-hidden="true">#</a> 加载机制</h1><p>CommonJS模块的加载机制是，** 输入的是被输出的值的拷贝。 ** 也就是说， ** 一旦输出一个值，模块内部的变化就影响不到这个值。 **</p><h1 id="commonjs-规范" tabindex="-1"><a class="header-anchor" href="#commonjs-规范" aria-hidden="true">#</a> CommonJS 规范</h1>`,13),_=l("<li><p>CommonJs规范的出发点：JS没有模块系统、标准库较少、缺乏包管理工具；为了让JS可以在任何地方运行，以达到Java、C#、PHP这些后台语言具备开发大型应用的能力；</p></li><li><p>在CommonJs规范中：</p><p>一个文件就是一个模块，拥有单独的作用域；</p><p>普通方式定义的变量、函数、对象都属于该模块内；</p><p>通过require来加载模块；</p><p>通过exports和modul.exports来暴露模块中的内容；</p></li><li><p>所有代码都运行在模块作用域，不会污染全局作用域；模块可以多次加载，但只会在第一次加载的时候运行一次，然后运行结果就被缓存了，以后再加载，就直接读取缓存结果；模块的加载顺序，按照代码的出现顺序是同步加载的;</p></li><li><p>__dirname代表当前模块文件所在的文件夹路径，__filename代表当前模块文件所在的文件夹路径+文件名;</p></li><li><p>require（同步加载）基本功能：读取并执行一个JS文件，然后返回该模块的exports对象，如果没有发现指定模块会报错;</p></li><li><p>模块内的exports：为了方便，node为每个模块提供一个exports变量，其指向module.exports，相当于在模块头部加了这句话：var exports = module.exports，在对外输出时，可以给exports对象添加方法，PS：不能直接赋值（因为这样就切断了exports和module.exports的联系）;</p></li><li><p>npm root -g：查看npm全局包安装位置，建议在nvm目录下新建npm\\node_modules目录，然后设置npm的全局包安装位置：npm config set prefix &quot;&quot;，然后将该路径添加到环境变量中;</p></li><li><p>npm init -y：初始化一个package.json文件，加上-y就会默认生成该文件，无需一步一步填写；npm docs 包名：查看包的文档；npm install：安装package.json中dependencies属性中所有依赖的包</p></li>",8),x={href:"http://npm.taobao.org/%EF%BC%8C%E4%B8%8E%E5%AE%98%E6%96%B9NPM%E7%9A%84%E5%90%8C%E6%AD%A5%E9%A2%91%E7%8E%87%E7%9B%AE%E5%89%8D%E4%B8%BA10%E5%88%86%E9%92%9F%E4%B8%80%E6%AC%A1%EF%BC%9B%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4%EF%BC%9Anpm",target:"_blank",rel:"noopener noreferrer"},v={href:"https://registry.npm.taobao.org",target:"_blank",rel:"noopener noreferrer"},E=e("li",null,[e("p",null,"如果你不想下载cnpm，npm还提供了一个镜像源管理工具：npm install -g nrm，通过：nrm ls，查看镜像源列表 ，通过：npm use 镜像源，来切换;")],-1),g=e("li",null,[e("p",null,"NPM的模块加载机制："),e("p",null,"如果require的是绝对路径文件，查找不会去遍历每个node_modules目录，其速度最快")],-1),b=e("p",null,"1）.从module.paths数组中（由当前执行文件目录到磁盘根目录）取出第一个目录作为查找基准",-1),f=e("p",null,"2）.直接从目录中查找该文件，如果存在则结束查找，如果不存在则进行下一条查找",-1),B=e("p",null,"3）.尝试添加.js、.json、.node后缀之后查找，如果存在文件则结束查找，如果不存在则进行下一条查找",-1),C=e("p",null,"4）.尝试将require的参数作为一个包来进行查找，读取目录下的package.json文件，取得Main参数指定的文件",-1),A=e("p",null,"5）.尝试查找该文件，如果存在则结束查找，如果不存在则进行第3条查找",-1),j=e("p",null,"6）.如果继续失败，则取出module.paths数组中的下一目录作为基准查找，循环第1-5个步骤",-1),k=e("p",null,"7）.如果继续失败，循环第1-6个步骤，直到module.paths中的最后一个值",-1),J=e("p",null,"8）.如果继续失败，则抛出异常",-1);function N(q,S){const s=t("center"),a=t("ExternalLinkIcon");return i(),d("div",null,[o(s,null,{default:p(()=>[u]),_:1}),m(" more "),n(" 在每个模块内部，module变量代表当前模块。它的exports属性是对外的接口，将模块的接口暴露出去。其他文件加载该模块，实际上就是读取module.exports变量。 "),h,e("ol",null,[_,e("li",null,[e("p",null,[n("由于npm的服务器是国外的，所以如果你没有和谐工具是下载不了的，这里推荐使用淘宝NPM镜像："),e("a",x,[n("http://npm.taobao.org/，与官方NPM的同步频率目前为10分钟一次；安装命令：npm"),o(a)]),n(" install -g cnpm --registry="),e("a",v,[n("https://registry.npm.taobao.org"),o(a)]),n("，安装包：cnpm install 包名（其它命令基本一致）;")])]),E,g]),b,f,B,C,A,j,k,J])}const V=r(c,[["render",N],["__file","CommonJS规范.html.vue"]]);export{V as default};
