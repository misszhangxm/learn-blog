const n=JSON.parse(`{"key":"v-6e41a964","path":"/posts/vue/vue%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E5%AE%9E%E7%8E%B0%E4%B8%80%E9%94%AE%E5%A4%8D%E5%88%B6.html","title":"自定义指令实现一键复制","lang":"zh-CN","frontmatter":{"title":"自定义指令实现一键复制","date":"2023-03-13T15:44:35.000Z","tag":["自定义指令实现一键复制"],"category":["vue"],"description":"const Vcopy = { bind(el, { value }) { el.$value = value; // 用一个全局属性来存传进来的值， 因为这个值在别的钩子函数里还会用到 el.handler = () =&gt; { if(!el.$value) { // 值为空的时候，给出提示，我这里的提示用的是ant-design-vue的提示 message.warning('无复制内容') return } // 动态创建textarea标签 const textarea = document.createElement('textarea') // 将该textarea 设为 readonly 防止ios 下自动唤起键盘， 同时将textarea 移出可视区域 textarea.readOnly = 'readOnly' textarea.style.position = 'absolute' textarea.style.left = '-9999px' // 将要copy的值赋给textarea 标签的value属性 textarea.value = el.$value // 将textarea 插入到body中 document.body.appendChild(textarea) // 选中值并复制 textarea.select() // textarea.setSelectionRange(0, textarea.value.length) const result = document.execCommand('Copy') if(result) { Message.success('复制成功') } document.body.removeChild(textarea) } // 绑定点击事件, 就是所谓的一键copy啦 el.addEventListener('click', el.handler) } // 当传进去的值更新的时候触发 componentUpdated(el, { value }) { el.$value = value } // 指令与元素解绑的时候，移除事件绑定 unbind(el) { el.removeEventListener('click', el.handler) } } export default vCopy","head":[["meta",{"property":"og:url","content":"http://cc.ceel.vip/posts/vue/vue%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E5%AE%9E%E7%8E%B0%E4%B8%80%E9%94%AE%E5%A4%8D%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"Miss.Ceel"}],["meta",{"property":"og:title","content":"自定义指令实现一键复制"}],["meta",{"property":"og:description","content":"const Vcopy = { bind(el, { value }) { el.$value = value; // 用一个全局属性来存传进来的值， 因为这个值在别的钩子函数里还会用到 el.handler = () =&gt; { if(!el.$value) { // 值为空的时候，给出提示，我这里的提示用的是ant-design-vue的提示 message.warning('无复制内容') return } // 动态创建textarea标签 const textarea = document.createElement('textarea') // 将该textarea 设为 readonly 防止ios 下自动唤起键盘， 同时将textarea 移出可视区域 textarea.readOnly = 'readOnly' textarea.style.position = 'absolute' textarea.style.left = '-9999px' // 将要copy的值赋给textarea 标签的value属性 textarea.value = el.$value // 将textarea 插入到body中 document.body.appendChild(textarea) // 选中值并复制 textarea.select() // textarea.setSelectionRange(0, textarea.value.length) const result = document.execCommand('Copy') if(result) { Message.success('复制成功') } document.body.removeChild(textarea) } // 绑定点击事件, 就是所谓的一键copy啦 el.addEventListener('click', el.handler) } // 当传进去的值更新的时候触发 componentUpdated(el, { value }) { el.$value = value } // 指令与元素解绑的时候，移除事件绑定 unbind(el) { el.removeEventListener('click', el.handler) } } export default vCopy"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"自定义指令实现一键复制"}],["meta",{"property":"article:published_time","content":"2023-03-13T15:44:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义指令实现一键复制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-13T15:44:35.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"posts/vue/vue自定义指令实现一键复制.md","localizedDate":"2023年3月13日","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> Vcopy <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n   <span class=\\"token function\\">bind</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">el<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> value <span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n     el<span class=\\"token punctuation\\">.</span>$value <span class=\\"token operator\\">=</span> value<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 用一个全局属性来存传进来的值， 因为这个值在别的钩子函数里还会用到</span>\\n     el<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">handler</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>el<span class=\\"token punctuation\\">.</span>$value<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          <span class=\\"token comment\\">// 值为空的时候，给出提示，我这里的提示用的是ant-design-vue的提示</span>\\n          message<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">warning</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'无复制内容'</span><span class=\\"token punctuation\\">)</span>\\n          <span class=\\"token keyword\\">return</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token comment\\">// 动态创建textarea标签</span>\\n       <span class=\\"token keyword\\">const</span> textarea <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createElement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'textarea'</span><span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token comment\\">// 将该textarea 设为 readonly 防止ios 下自动唤起键盘， 同时将textarea 移出可视区域</span>\\n       textarea<span class=\\"token punctuation\\">.</span>readOnly <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'readOnly'</span>\\n       textarea<span class=\\"token punctuation\\">.</span>style<span class=\\"token punctuation\\">.</span>position <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'absolute'</span>\\n       textarea<span class=\\"token punctuation\\">.</span>style<span class=\\"token punctuation\\">.</span>left <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'-9999px'</span>\\n       <span class=\\"token comment\\">// 将要copy的值赋给textarea 标签的value属性</span>\\n       textarea<span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> el<span class=\\"token punctuation\\">.</span>$value\\n       <span class=\\"token comment\\">// 将textarea 插入到body中</span>\\n       document<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span>textarea<span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token comment\\">// 选中值并复制</span>\\n       textarea<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">select</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token comment\\">// textarea.setSelectionRange(0, textarea.value.length)</span>\\n       <span class=\\"token keyword\\">const</span> result <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">execCommand</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Copy'</span><span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>result<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n          Message<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">success</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'复制成功'</span><span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       document<span class=\\"token punctuation\\">.</span>body<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeChild</span><span class=\\"token punctuation\\">(</span>textarea<span class=\\"token punctuation\\">)</span>\\n     <span class=\\"token punctuation\\">}</span>\\n     <span class=\\"token comment\\">// 绑定点击事件, 就是所谓的一键copy啦</span>\\n     el<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'click'</span><span class=\\"token punctuation\\">,</span> el<span class=\\"token punctuation\\">.</span>handler<span class=\\"token punctuation\\">)</span>\\n   <span class=\\"token punctuation\\">}</span>\\n   <span class=\\"token comment\\">// 当传进去的值更新的时候触发</span>\\n   <span class=\\"token function\\">componentUpdated</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">el<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> value <span class=\\"token punctuation\\">}</span></span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n     el<span class=\\"token punctuation\\">.</span>$value <span class=\\"token operator\\">=</span> value\\n   <span class=\\"token punctuation\\">}</span>\\n   <span class=\\"token comment\\">// 指令与元素解绑的时候，移除事件绑定</span>\\n   <span class=\\"token function\\">unbind</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">el</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n     el<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'click'</span><span class=\\"token punctuation\\">,</span> el<span class=\\"token punctuation\\">.</span>handler<span class=\\"token punctuation\\">)</span>\\n   <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">default</span> vCopy\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
