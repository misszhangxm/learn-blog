import{_ as t,V as e,W as l,Z as d,X as i,a0 as n}from"./framework-fd1dac66.js";const s={},a=i("p",null,"仅仅是为了自己方便看。 file 对象使用 open 函数来创建，下表列出了 file 对象常用的函数： file = open('test.txt', 'wb')",-1),r=n('<table><thead><tr><th style="text-align:center;">序号</th><th style="text-align:left;">方法</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:left;">file.close()</td><td style="text-align:left;">关闭文件。关闭后文件不能再进行读写操作。</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:left;">file.flush()</td><td style="text-align:left;">刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件, 而不是被动的等待输出缓冲区写入。</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:left;">file.fileno()</td><td style="text-align:left;">返回一个整型的文件描述符(file descriptor FD 整型), 可以用在如os模块的read方法等一些底层操作上。</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:left;">file.isatty()</td><td style="text-align:left;">如果文件连接到一个终端设备返回 True，否则返回 False。</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:left;">file.next()</td><td style="text-align:left;">返回文件下一行。</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:left;">file.read([size])</td><td style="text-align:left;">从文件读取指定的字节数，如果未给定或为负则读取所有。</td></tr><tr><td style="text-align:center;">7</td><td style="text-align:left;">file.readline([size])</td><td style="text-align:left;">读取整行，包括 &quot;\\n&quot; 字符。</td></tr><tr><td style="text-align:center;">8</td><td style="text-align:left;">file.readlines([sizeint])</td><td style="text-align:left;">读取所有行并返回列表，若给定sizeint&gt;0，返回总和大约为sizeint字节的行, 实际读取值可能比 sizeint 较大, 因为需要填充缓冲区。</td></tr><tr><td style="text-align:center;">9</td><td style="text-align:left;">file.seek(offset[, whence])</td><td style="text-align:left;">设置文件当前位置</td></tr><tr><td style="text-align:center;">10</td><td style="text-align:left;">file.tell()</td><td style="text-align:left;">返回文件当前位置。</td></tr><tr><td style="text-align:center;">11</td><td style="text-align:left;">file.truncate([size])</td><td style="text-align:left;">从文件的首行首字符开始截断，截断文件为 size 个字符，无 size 表示从当前位置截断；截断之后后面的所有字符被删除，其中 Widnows 系统下的换行代表2个字符大小。</td></tr><tr><td style="text-align:center;">12</td><td style="text-align:left;">file.write(str)</td><td style="text-align:left;">将字符串写入文件，返回的是写入的字符长度。</td></tr><tr><td style="text-align:center;">13</td><td style="text-align:left;">file.writelines(sequence)</td><td style="text-align:left;">向文件写入一个序列字符串列表，如果需要换行则要自己加入每行的换行符。</td></tr></tbody></table>',1);function f(y,x){return e(),l("div",null,[a,d(" more "),r])}const c=t(s,[["render",f],["__file","Python-file.html.vue"]]);export{c as default};
