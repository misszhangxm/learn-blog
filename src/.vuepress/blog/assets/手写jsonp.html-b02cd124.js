const n=JSON.parse('{"key":"v-443b7672","path":"/posts/vue/%E6%89%8B%E5%86%99jsonp.html","title":"手写jsonp","lang":"zh-CN","frontmatter":{"title":"手写jsonp","date":"2023-03-13T15:44:35.000Z","tag":["jsonp"],"category":["vue"],"description":"(function (global) { var id = 0, \\tcontainer = document.getElementsByTagName(\\"head\\")[0]; function jsonp(options) { \\tif(!options || !options.url) return; \\tvar scriptNode = document.createElement(\\"script\\"), \\t\\tdata = options.data || {}, \\t\\t\\turl = options.url, \\t\\t\\tcallback = options.callback, \\t\\t\\tfnName = \\"jsonp\\" + id++; \\t\\t\\t// 添加回调函数 \\t\\t\\tdata[\\"callback\\"] = fnName; \\t\\t\\t// 拼接url \\t\\t\\tvar params = []; \\t\\t\\tfor (var key in data) { \\tparams.push(encodeURIComponent(key) + \\"=\\" + encodeURIComponent(data[ } url = url.indexOf(\\"?\\") &gt; 0 ? (url + \\"&amp;\\") : (url + \\"?\\"); url += params.join(\\"&amp;\\"); scriptNode.src = url; // 传递的是⼀个匿名的回调函数，要执⾏的话，暴露为⼀个全局⽅法 global[fnName] = function (ret) { callback &amp;&amp; callback(ret); container.removeChild(scriptNode); delete global[fnName]; } // 出错处理 scriptNode.onerror = function () { callback &amp;&amp; callback({error:\\"error\\"}); container.removeChild(scriptNode); global[fnName] &amp;&amp; delete global[fnName]; } \\t scriptNode.type = \\"text/javascript\\"; container.appendChild(scriptNode) } global.jsonp = jsonp; })(this)","head":[["meta",{"property":"og:url","content":"http://cc.ceel.vip/posts/vue/%E6%89%8B%E5%86%99jsonp.html"}],["meta",{"property":"og:site_name","content":"Miss.Ceel"}],["meta",{"property":"og:title","content":"手写jsonp"}],["meta",{"property":"og:description","content":"(function (global) { var id = 0, \\tcontainer = document.getElementsByTagName(\\"head\\")[0]; function jsonp(options) { \\tif(!options || !options.url) return; \\tvar scriptNode = document.createElement(\\"script\\"), \\t\\tdata = options.data || {}, \\t\\t\\turl = options.url, \\t\\t\\tcallback = options.callback, \\t\\t\\tfnName = \\"jsonp\\" + id++; \\t\\t\\t// 添加回调函数 \\t\\t\\tdata[\\"callback\\"] = fnName; \\t\\t\\t// 拼接url \\t\\t\\tvar params = []; \\t\\t\\tfor (var key in data) { \\tparams.push(encodeURIComponent(key) + \\"=\\" + encodeURIComponent(data[ } url = url.indexOf(\\"?\\") &gt; 0 ? (url + \\"&amp;\\") : (url + \\"?\\"); url += params.join(\\"&amp;\\"); scriptNode.src = url; // 传递的是⼀个匿名的回调函数，要执⾏的话，暴露为⼀个全局⽅法 global[fnName] = function (ret) { callback &amp;&amp; callback(ret); container.removeChild(scriptNode); delete global[fnName]; } // 出错处理 scriptNode.onerror = function () { callback &amp;&amp; callback({error:\\"error\\"}); container.removeChild(scriptNode); global[fnName] &amp;&amp; delete global[fnName]; } \\t scriptNode.type = \\"text/javascript\\"; container.appendChild(scriptNode) } global.jsonp = jsonp; })(this)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"jsonp"}],["meta",{"property":"article:published_time","content":"2023-03-13T15:44:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写jsonp\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-13T15:44:35.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"posts/vue/手写jsonp.md","localizedDate":"2023年3月13日","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">global</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">var</span> id <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n    \\tcontainer <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getElementsByTagName</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"head\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    \\n    <span class=\\"token keyword\\">function</span> <span class=\\"token function\\">jsonp</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">options</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    \\t<span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>options <span class=\\"token operator\\">||</span> <span class=\\"token operator\\">!</span>options<span class=\\"token punctuation\\">.</span>url<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n    \\t<span class=\\"token keyword\\">var</span> scriptNode <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createElement</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"script\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    \\t\\tdata <span class=\\"token operator\\">=</span> options<span class=\\"token punctuation\\">.</span>data <span class=\\"token operator\\">||</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n\\t\\t\\turl <span class=\\"token operator\\">=</span> options<span class=\\"token punctuation\\">.</span>url<span class=\\"token punctuation\\">,</span>\\n\\t\\t\\tcallback <span class=\\"token operator\\">=</span> options<span class=\\"token punctuation\\">.</span>callback<span class=\\"token punctuation\\">,</span>\\n\\t\\t\\tfnName <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"jsonp\\"</span> <span class=\\"token operator\\">+</span> id<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n        \\n\\t\\t\\t<span class=\\"token comment\\">// 添加回调函数</span>\\n\\t\\t\\tdata<span class=\\"token punctuation\\">[</span><span class=\\"token string\\">\\"callback\\"</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> fnName<span class=\\"token punctuation\\">;</span>\\n        \\n\\t\\t\\t<span class=\\"token comment\\">// 拼接url</span>\\n\\t\\t\\t<span class=\\"token keyword\\">var</span> params <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t\\t<span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">var</span> key <span class=\\"token keyword\\">in</span> data<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            \\tparams<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">encodeURIComponent</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"=\\"</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">encodeURIComponent</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">[</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            url <span class=\\"token operator\\">=</span> url<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">indexOf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"?\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> <span class=\\"token punctuation\\">(</span>url <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"&amp;\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>url <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"?\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            url <span class=\\"token operator\\">+=</span> params<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"&amp;\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            scriptNode<span class=\\"token punctuation\\">.</span>src <span class=\\"token operator\\">=</span> url<span class=\\"token punctuation\\">;</span>\\n                \\n            <span class=\\"token comment\\">// 传递的是⼀个匿名的回调函数，要执⾏的话，暴露为⼀个全局⽅法</span>\\n            global<span class=\\"token punctuation\\">[</span>fnName<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">ret</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                callback <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">callback</span><span class=\\"token punctuation\\">(</span>ret<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                container<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeChild</span><span class=\\"token punctuation\\">(</span>scriptNode<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                <span class=\\"token keyword\\">delete</span> global<span class=\\"token punctuation\\">[</span>fnName<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n                \\n            <span class=\\"token comment\\">// 出错处理</span>\\n            scriptNode<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onerror</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                callback <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">callback</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span><span class=\\"token literal-property property\\">error</span><span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"error\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                container<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">removeChild</span><span class=\\"token punctuation\\">(</span>scriptNode<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                global<span class=\\"token punctuation\\">[</span>fnName<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token keyword\\">delete</span> global<span class=\\"token punctuation\\">[</span>fnName<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n\\t\\n            scriptNode<span class=\\"token punctuation\\">.</span>type <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"text/javascript\\"</span><span class=\\"token punctuation\\">;</span>\\n            container<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">appendChild</span><span class=\\"token punctuation\\">(</span>scriptNode<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        \\n        global<span class=\\"token punctuation\\">.</span>jsonp <span class=\\"token operator\\">=</span> jsonp<span class=\\"token punctuation\\">;</span>\\n        \\n <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
