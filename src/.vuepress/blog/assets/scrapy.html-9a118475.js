import{_ as n,V as s,W as a,Z as p,X as t,a0 as e}from"./framework-fd1dac66.js";const o={},c=t("p",null,"Spider是用户编写用于从单个网站(或者一些网站)爬取数据的类。",-1),i=e(`<p><strong>创建项目</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scrapy startproject <span class="token operator">&lt;</span>your project<span class="token operator">-</span>name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>会创建一个类似以下的目录(例如名字叫tutorial)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tutorial<span class="token operator">/</span>
    scrapy<span class="token punctuation">.</span>cfg            <span class="token comment"># deploy configuration file</span>

    tutorial<span class="token operator">/</span>             <span class="token comment"># project&#39;s Python module, you&#39;ll import your code from here</span>
        __init__<span class="token punctuation">.</span>py

        items<span class="token punctuation">.</span>py          <span class="token comment"># project items definition file</span>

        middlewares<span class="token punctuation">.</span>py    <span class="token comment"># project middlewares file</span>

        pipelines<span class="token punctuation">.</span>py      <span class="token comment"># project pipelines file</span>

        settings<span class="token punctuation">.</span>py       <span class="token comment"># project settings file</span>

        spiders<span class="token operator">/</span>          <span class="token comment"># a directory where you&#39;ll later put your spiders</span>
            __init__<span class="token punctuation">.</span>py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们的爬虫代码一般放在<code>tutorial/spider/</code>下 例如：<code>jimi.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> scrapy
<span class="token keyword">from</span> tutorial<span class="token punctuation">.</span>items <span class="token keyword">import</span> JimiItem

<span class="token keyword">class</span> <span class="token class-name">JimiSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
	name <span class="token operator">=</span> <span class="token string">&quot;jimi&quot;</span>
	start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;https://book.douban.com/author/4504814/&quot;</span><span class="token punctuation">]</span>

	<span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了创建一个<code>Spider</code>，您必须继承 <code>scrapy.Spider</code> 类， 且定义以下三个属性: 我们的Spider子类scrapy.Spider 并定义了一些属性和方法：</p><ul><li>name：识别爬虫。它在项目中必须是唯一的，也就是说，不能为不同的<code>Spiders</code>设置相同的名称。</li><li>start_requests()：必须返回<code>Spider</code>将开始爬行的可迭代请求（可以返回请求列表或编写生成器函数）。后续请求将从这些初始请求中连续生成。</li><li>parse()：将调用一个方法来处理为每个请求下载的响应。响应参数是<code>TextResponse</code>保存页面内容的实例，并具有处理它的其他有用方法。 该<code>parse()</code>方法通常解析响应，将抽取的数据提取为<code>dicts</code>，并查找要遵循的新<code>URL</code>并<code>Request</code>从中创建新的<code>request（）</code>。</li></ul><p>运行我们的文件： 转到项目根目录，输入下面代码(这里的<code>quotes</code>就是<code>quotes_spider.py</code>文件里面的<code>name</code>值)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scrapy crawl quotes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>提取数据</strong></p><p>学习如何使用Scrapy提取数据的最佳方法是使用shell Scrapy shell尝试选择器。运行(url 需要带上引号)：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scrapy shell <span class="token string">&#39;https://book.douban.com/author/4504814/&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你会看到类似的输出日志：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token number">2018</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">49</span> <span class="token punctuation">[</span>scrapy<span class="token punctuation">.</span>middleware<span class="token punctuation">]</span> INFO<span class="token punctuation">:</span> Enabled item pipelines<span class="token punctuation">:</span>
<span class="token punctuation">[</span><span class="token string">&#39;tutorial.pipelines.TutorialPipeline&#39;</span><span class="token punctuation">]</span>
<span class="token number">2018</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">49</span> <span class="token punctuation">[</span>scrapy<span class="token punctuation">.</span>extensions<span class="token punctuation">.</span>telnet<span class="token punctuation">]</span> DEBUG<span class="token punctuation">:</span> Telnet console listening on <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">6023</span>
<span class="token number">2018</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">49</span> <span class="token punctuation">[</span>scrapy<span class="token punctuation">.</span>core<span class="token punctuation">.</span>engine<span class="token punctuation">]</span> INFO<span class="token punctuation">:</span> Spider opened
<span class="token number">2018</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">50</span> <span class="token punctuation">[</span>scrapy<span class="token punctuation">.</span>core<span class="token punctuation">.</span>engine<span class="token punctuation">]</span> DEBUG<span class="token punctuation">:</span> Crawled <span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span>GET https<span class="token punctuation">:</span><span class="token operator">//</span>book<span class="token punctuation">.</span>douban<span class="token punctuation">.</span>com<span class="token operator">/</span>robots<span class="token punctuation">.</span>txt<span class="token operator">&gt;</span> <span class="token punctuation">(</span>referer<span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token number">2018</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">18</span><span class="token punctuation">:</span><span class="token number">06</span><span class="token punctuation">:</span><span class="token number">50</span> <span class="token punctuation">[</span>scrapy<span class="token punctuation">.</span>core<span class="token punctuation">.</span>engine<span class="token punctuation">]</span> DEBUG<span class="token punctuation">:</span> Crawled <span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span>GET https<span class="token punctuation">:</span><span class="token operator">//</span>book<span class="token punctuation">.</span>douban<span class="token punctuation">.</span>com<span class="token operator">/</span>author<span class="token operator">/</span><span class="token number">4504814</span><span class="token operator">/</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span>referer<span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span> Available Scrapy objects<span class="token punctuation">:</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   scrapy     scrapy module <span class="token punctuation">(</span>contains scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">,</span> scrapy<span class="token punctuation">.</span>Selector<span class="token punctuation">,</span> etc<span class="token punctuation">)</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   crawler    <span class="token operator">&lt;</span>scrapy<span class="token punctuation">.</span>crawler<span class="token punctuation">.</span>Crawler <span class="token builtin">object</span> at <span class="token number">0x000002363EE7BB70</span><span class="token operator">&gt;</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   item       <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   request    <span class="token operator">&lt;</span>GET https<span class="token punctuation">:</span><span class="token operator">//</span>book<span class="token punctuation">.</span>douban<span class="token punctuation">.</span>com<span class="token operator">/</span>author<span class="token operator">/</span><span class="token number">4504814</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   response   <span class="token operator">&lt;</span><span class="token number">200</span> https<span class="token punctuation">:</span><span class="token operator">//</span>book<span class="token punctuation">.</span>douban<span class="token punctuation">.</span>com<span class="token operator">/</span>author<span class="token operator">/</span><span class="token number">4504814</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   settings   <span class="token operator">&lt;</span>scrapy<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>Settings <span class="token builtin">object</span> at <span class="token number">0x00000236414B2A20</span><span class="token operator">&gt;</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   spider     <span class="token operator">&lt;</span>DefaultSpider <span class="token string">&#39;default&#39;</span> at <span class="token number">0x236419cb198</span><span class="token operator">&gt;</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span> Useful shortcuts<span class="token punctuation">:</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   fetch<span class="token punctuation">(</span>url<span class="token punctuation">[</span><span class="token punctuation">,</span> redirect<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">]</span><span class="token punctuation">)</span> Fetch URL <span class="token keyword">and</span> update local objects <span class="token punctuation">(</span>by default<span class="token punctuation">,</span> redirects are followed<span class="token punctuation">)</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   fetch<span class="token punctuation">(</span>req<span class="token punctuation">)</span>                  Fetch a scrapy<span class="token punctuation">.</span>Request <span class="token keyword">and</span> update local objects
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   shelp<span class="token punctuation">(</span><span class="token punctuation">)</span>           Shell <span class="token builtin">help</span> <span class="token punctuation">(</span><span class="token keyword">print</span> this <span class="token builtin">help</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>s<span class="token punctuation">]</span>   view<span class="token punctuation">(</span>response<span class="token punctuation">)</span>    View response <span class="token keyword">in</span> a browser
In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时可以测试提取数据的代码 例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//div[@id=&quot;wrapper&quot;]/div[@id=&quot;content&quot;]/h1/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>退出shell： <code>ctrl + d</code></p><p><code>jimi.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> scrapy
<span class="token keyword">from</span> tutorial<span class="token punctuation">.</span>items <span class="token keyword">import</span> JimiItem

<span class="token keyword">class</span> <span class="token class-name">JimiSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
	name <span class="token operator">=</span> <span class="token string">&quot;jimi&quot;</span>
	start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;https://book.douban.com/author/4504814/&quot;</span><span class="token punctuation">]</span>

	<span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
		item <span class="token operator">=</span> JimiItem<span class="token punctuation">(</span><span class="token punctuation">)</span>
		item<span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//div[@id=&quot;wrapper&quot;]/div[@id=&quot;content&quot;]/h1/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>
		item<span class="token punctuation">[</span><span class="token string">&quot;describe&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//div[@id=&quot;wrapper&quot;]/div[@id=&quot;content&quot;]/div/div[@class=&quot;article&quot;]/div[@id=&quot;intro&quot;]/div[@class=&quot;bd&quot;]/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract_first<span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">yield</span> item       
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面文件引入了<code>JimiItem</code>，现在看下<code>items.py</code>文件。（items文件具体是做什么的我也不清楚...） <code>items.py</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> scrapy
<span class="token keyword">from</span> scrapy <span class="token keyword">import</span> Field<span class="token punctuation">,</span> Item

<span class="token keyword">class</span> <span class="token class-name">JimiItem</span><span class="token punctuation">(</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
	title <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">)</span>
	describe <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">)</span>
	book_title <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">)</span>
	book_link <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 这里定义了4个 其实只用了前两个</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来看下<code>pipelines.py</code>文件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> json
<span class="token keyword">class</span> <span class="token class-name">TutorialPipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
	<span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 该方法在spider启用的时候调用</span>
		self<span class="token punctuation">.</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;3.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>
	<span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 大概是在中间的时候调用...</span>
		line <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span>
		self<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span>
		<span class="token keyword">return</span> item
	<span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 该方法在spider结束的时候调用</span>
		self<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有就是要在<code>settings.py</code>文件中释放</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;tutorial.pipelines.TutorialPipeline&#39;</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后面的数字“300”，是优先级，数字越小，越优先执行</p><p><strong>总结</strong></p><p>在终端中输入以下命令，查看scrapy有哪些命令语法</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scrapy <span class="token operator">-</span>h
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>生成spider</strong> 创建spider。一般创建的spider名字是跟域名一样的，比如<code>www.baidu.com</code>，我们穿件的爬虫命令(个人感觉有点麻烦，还不如直接手动新建文件)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scrapy genspider baidu baidu<span class="token punctuation">.</span>com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>开始爬取</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>scrapy crawl <span class="token operator">&lt;</span>spidername<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结语： “这个框架我也没有感觉到特别的地方，接下来尝试不使用框架爬取数据。”</p>`,35);function l(u,r){return s(),a("div",null,[c,p(" more "),i])}const k=n(o,[["render",l],["__file","scrapy.html.vue"]]);export{k as default};
