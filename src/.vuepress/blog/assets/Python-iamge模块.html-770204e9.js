import{_ as e,V as o,W as d,Z as c,X as i,a0 as t}from"./framework-fd1dac66.js";const a={},p=i("p",null,"from PIL import Image 引入 模块",-1),n=t(`<p>1、 打开(读取)图片 <code>img = Image.open(&#39;tu.png&#39;)</code></p><p>2、 显示(查看)图片 <code>img.show()</code></p><p>3、 保存图片 <code>img.save(&quot;save.gif&quot;,&quot;GIF&quot;) </code> 保存图像为gif格式</p><p>4、 创建新图片</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Image.new(mode,size)
Image.new(mode,size,color)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：<code>newImg = Image.new(&quot;RGBA&quot;,(640,480),(0,255,0))</code></p><p>5、 两张图片相加 <code>Image.blend(img1,img2,alpha) </code> 这里<code>alpha</code>表示<code>img1</code>和<code>img2</code>的比例参数</p><p>6、 点操作 <code>im.point(function) </code> 这个<code>function</code>接受一个参数，且对图片中的每一个点执行这个函数 比如：<code>out=im.point(lambdai:i*1.5)</code> 对每个点进行50%的加强</p><p>7、 查看图像信息 <code>im.format, im.size, im.mode</code></p><p>8、 图片裁剪</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>img.crop(box)
box=(100,100,500,500)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置要裁剪的区域 <code>region=img.crop(box) </code> 此时，<code>region</code>是一个新的图像对象。</p><p>9、 图像黏贴（合并） <code>im.paste(region,box)</code> 粘贴box大小的region到原先的图片对象中。</p><p>10、 通道分离 <code>r,g,b=im.split()</code> 分割成三个通道，此时r,g,b分别为三个图像对象。</p><p>11、 通道合并 <code>im=Image.merge(&quot;RGB&quot;,(b,g,r))</code> 将b,r两个通道进行翻转。</p><p>12、 改变图像的大小 <code>out=img.resize((128,128))</code> resize成128*128像素大小</p><p>13、 旋转图像 <code>out=img.rotate(45) </code> 逆时针旋转45度</p><p>有更方便的 <code>region = region.transpose(Image.ROTATE_180）</code></p><p>14、 图像转换 <code>out = im.transpose(Image.FLIP_LEFT_RIGHT)</code> 左右对换。</p><p><code>out = im.transpose(Image.FLIP_TOP_BOTTOM)</code> 上下对换</p><p>15、 图像类型转换 <code>im=im.convert(&quot;RGBA&quot;)</code></p><p>16、 获取某个像素位置的值 <code>im.getpixel((4,4))</code></p><p>17、 写某个像素位置的值 <code>img.putpixel((4,4),(255,0,0))</code></p><p>18、 创建画笔,用于在图片上生成内容 <code>draw1 = ImageDraw.Draw(img1, mode=&quot;RGB&quot;) </code></p><p>19、 在图片上画线 <code>draw1.line((100,100,350,300),fill=&quot;red&quot;)</code> \`</p><p>20、 图上画圆 第一个元组里面的4个参数代表圆的左上角点和右下角的点（一共俩点） <code>draw1.arc((0,0,400,400),0,360,fill=&quot;red&quot;)</code></p><p>21、 在图片在写文本 <code>draw1.text([220,330],&quot;python&quot;,&quot;blue&quot;, font=&quot;&quot;)</code></p><ul><li>第一个参数 指定写入的位置</li><li>第二个参数 要写的内容</li><li>第三个参数 文字的颜色</li><li>第四个参数 指定文字的样式（一般用字体文件）</li></ul>`,28);function m(r,l){return o(),d("div",null,[p,c(" more "),n])}const u=e(a,[["render",m],["__file","Python-iamge模块.html.vue"]]);export{u as default};
